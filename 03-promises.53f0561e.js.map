{"mappings":"AACA,MAAMA,EAASC,SAASC,cAAc,SAItC,SAASC,EAAcC,EAAUC,GAE/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,uBAAqBH,QAAiBC,OAE5CG,EAAK,sBAAoBJ,QAAeC,MAAU,GAErDA,EAAM,G,CAdKJ,SAASC,cAAc,yBAoB/BW,iBAAiB,UAE3B,SAAsBC,IAItB,UAAqBC,OAAEA,EAAMC,KAAEA,IAC7B,IAAIZ,EAAW,EACf,IAAKa,EAAI,EAAGA,GAAKF,EAAQE,IAGvB,OAFAb,EAAWa,EACXZ,OAASW,EACFb,EAAcC,EAAUC,M,CARjCa,E,IAcF,IAAIC,EAAU,GAEdnB,EAAOa,iBAAiB,SACxB,SAAsBC,GACpBK,EAAQJ,OAASd,SAASC,cAAc,wBAAwBkB,MAEhED,EAAQd,MAAQJ,SAASC,cAAc,uBAAuBkB,MAC9DD,EAAQH,KAAOf,SAASC,cAAc,sBAAsBkB,MAC5DC,QAAQC,IAAIH,E,IAGdE,QAAQC,IAAIH","sources":["src/js/03-promises.js"],"sourcesContent":["\nconst formEl = document.querySelector('.form');\nconst btnSubmit = document.querySelector('button[type=\"submit\"]');\n\n\nfunction createPromise(position, delay) {\n\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n  \n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  })\n};\n\n// Promise(position, delay).then(result).catch(error);\n\nbtnSubmit.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  callPromise();\n}\n\nfunction callPromise({ amount, step }) {\n  let position = 0;\n  for (i = 0; i <= amount; i++){\n    position = i;\n    delay += step;\n    return createPromise(position, delay);\n    \n  }\n}\n\n\nlet figures = {};\n\nformEl.addEventListener('input', onFormChange);\nfunction onFormChange(e) {\n  figures.amount = document.querySelector('input[name=\"amount\"]').value;\n  \n  figures.delay = document.querySelector('input[name=\"delay\"]').value;\n  figures.step = document.querySelector('input[name=\"step\"]').value;\n  console.log(figures);\n}\n\nconsole.log(figures);\n\n"],"names":["$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","amount","step","i","$47d4ff9957288465$var$callPromise","$47d4ff9957288465$var$figures","value","console","log"],"version":3,"file":"03-promises.53f0561e.js.map"}